<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:p="http://www.springframework.org/schema/p"
    xmlns:context="http://www.springframework.org/schema/context"
    xmlns:mvc="http://www.springframework.org/schema/mvc"
    xsi:schemaLocation="http://www.springframework.org/schema/beans  
                            http://www.springframework.org/schema/beans/spring-beans-4.0.xsd  
                            http://www.springframework.org/schema/context  
                            http://www.springframework.org/schema/context/spring-context-4.0.xsd  
                            http://www.springframework.org/schema/mvc  
                            http://www.springframework.org/schema/mvc/spring-mvc-4.0.xsd">
                            
                            
                            
     <!-- 自动扫描该包，使SpringMVC认为包下用了@controller注解的类是控制器 -->
   	<context:component-scan base-package="com.ly.user。controller" />
   	<context:component-scan base-package="com.ly.**.controller" use-default-filters="false">
    <context:include-filter type="annotation" expression="org.springframework.stereotype.Controller" />
    <context:include-filter type="annotation" expression="org.springframework.web.bind.annotation.ControllerAdvice" />
 		</context:component-scan>
    <!-- 会自动注册了validator ConversionService -->
  <mvc:annotation-driven    content-negotiation-manager="contentNegotiationManager">
    <!--enableMatrixVariables="true"> -->
    <!-- 异步支持 默认30秒超时 -->
    <mvc:async-support default-timeout="30000" />

    <mvc:message-converters register-defaults="true">
      <!-- StringHttpMessageConverter编码为UTF-8，防止乱码 -->
      <bean class="org.springframework.http.converter.StringHttpMessageConverter">
        <constructor-arg value="UTF-8" />
        <property name="supportedMediaTypes">
          <list>
            <bean class="org.springframework.http.MediaType">
              <constructor-arg index="0" value="text" />
              <constructor-arg index="1" value="plain" />
              <constructor-arg index="2" value="UTF-8" />
            </bean>
            <bean class="org.springframework.http.MediaType">
              <constructor-arg index="0" value="*" />
              <constructor-arg index="1" value="*" />
              <constructor-arg index="2" value="UTF-8" />
            </bean>
          </list>
        </property>
      </bean>

      <!-- 避免IE执行AJAX时,返回JSON出现下载文件 -->
      <bean id="fastJsonHttpMessageConverter" class="com.alibaba.fastjson.support.spring.FastJsonHttpMessageConverter">
        <property name="supportedMediaTypes">
          <list>
            <value>text/plain;charset=UTF-8</value>
          </list>
        </property>
        <!--<property name="serializerFeature"> -->
        <!--这个地方加上这个功能吧，能自己配置一些东西，比如时间的格式化，null输出""等等 -->
        <!--</property> -->
      </bean>
    </mvc:message-converters>

    <!-- <mvc:argument-resolvers>
      <bean class="com.go2plus.ad.common.web.bind.method.annotation.SearchableMethodArgumentResolver" />
      <bean class="com.go2plus.ad.common.web.bind.method.annotation.CurrentUserMethodArgumentResolver"/>
      <bean class="com.go2plus.ad.common.web.bind.method.annotation.PageableMethodArgumentResolver"/>
    </mvc:argument-resolvers> -->
    <!-- <mvc:argument-resolvers>  <bean class="com.mtwu.common.web.bind.method.annotation.SearchableMethodArgumentResolver"/> 
      <bean class="com.mtwu.common.web.bind.method.annotation.FormModelMethodArgumentResolver"/> <bean class="com.digitalchina.ksp.sys.user.web.bind.method.CurrentUserMethodArgumentResolver"/> 
      </mvc:argument-resolvers> -->

  </mvc:annotation-driven>

    <!-- 启动SpringMVC的注解功能，完成请求和注解POJO的映射 -->
   <!--  <bean
        class="org.springframework.web.servlet.mvc.annotation.AnnotationMethodHandlerAdapter">
        <property name="messageConverters">
            <list>
                <ref bean="mappingJacksonHttpMessageConverter" />
            </list>
        </property>
    </bean> -->

    <!-- 对静态资源的访问 -->
    <!-- <mvc:resources mapping="/js/**" location="/js/" /> <mvc:resources mapping="/css/**" 
        location="/css/" /> -->

    

  <!-- 默认的注解映射的支持 -->
 <!--  <mvc:annotation-driven>
    <mvc:message-converters>
      default StringHttpMessageConverter, solve encoding problem
      <bean class="org.springframework.http.converter.StringHttpMessageConverter">
        <constructor-arg value="UTF-8" />
        <property name="writeAcceptCharset" value="false" />
      </bean>
    </mvc:message-converters>
  </mvc:annotation-driven> -->
    <!-- 允许对静态资源文件的访问 -->

    <mvc:default-servlet-handler />
    
    
    <bean
		class="org.springframework.web.servlet.view.freemarker.FreeMarkerConfigurer">
		<property name="templateLoaderPath" value="/html/" />
		<property name="freemarkerSettings">
			<props>
				<prop key="template_update_delay">10</prop>
				<prop key="default_encoding">UTF-8</prop>
				<prop key="number_format">0.#</prop>
				<prop key="datetime_format">yyyy-MM-dd HH:mm:ss</prop>
				<prop key="classic_compatible">true</prop>
				<prop key="template_exception_handler">ignore</prop>
			</props>
		</property>
	</bean>

	<bean class="com.ly.common.mvc.MutiViewResolver">
		<property name="resolvers">
			<map>
				<entry key="jsp">
					<bean
						class="org.springframework.web.servlet.view.InternalResourceViewResolver">
						<property name="prefix" value="/jsp/" />
						<property name="viewClass"
							value="org.springframework.web.servlet.view.JstlView" />
					</bean>
				</entry>
				<entry key="html,ftl">
					<bean
						class="org.springframework.web.servlet.view.freemarker.FreeMarkerViewResolver">
						<property name="cache" value="true" />
						<property name="contentType" value="text/html;charset=UTF-8"></property>
					</bean>
				</entry>
			</map>
		</property>
	</bean>
    

    <!-- 默认的视图解析器 在上边的解析错误时使用 (默认使用html)- -->
	  <!-- <bean id="defaultViewResolver" class="org.springframework.web.servlet.view.InternalResourceViewResolver" p:order="1">
	    <property name="viewClass" value="org.springframework.web.servlet.view.JstlView" />
	    <property name="contentType" value="text/html" />
	    <property name="prefix" value="/jsp/" />
	    <property name="suffix" value=".jsp" />
	  </bean> -->
	  
    <!-- 配置文件上传，如果没有使用文件上传可以不用配置，当然如果不配，那么配置文件中也不必引入上传组件包 -->
    <bean id="multipartResolver"
        class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
        <!-- 默认编码 -->
        <property name="defaultEncoding" value="UTF-8" />
        <!-- 文件大小最大值 -->
        <property name="maxUploadSize" value="10485760000" />
        <!-- 内存中的最大值 -->
        <property name="maxInMemorySize" value="2048" />
    </bean>
    
     <!-- 内容协商管理器 -->
  <!--1、首先检查路径扩展名（如my.pdf）；2、其次检查Parameter（如my?format=pdf）；3、检查Accept Header -->
  <bean id="contentNegotiationManager" class="org.springframework.web.accept.ContentNegotiationManagerFactoryBean">
    <!-- 扩展名至mimeType的映射,即 /user.json => application/json -->
    <property name="favorPathExtension" value="true" />
    <!-- 用于开启 /userinfo/123?format=json 的支持 -->
    <property name="favorParameter" value="true" />
    <property name="parameterName" value="format" />
    <!-- 是否忽略Accept Header -->
    <property name="ignoreAcceptHeader" value="false" />

    <property name="mediaTypes"> <!--扩展名到MIME的映射；favorPathExtension, favorParameter是true时起作用 -->
      <value>
        json=application/json
        xml=application/xml
        html=text/html
      </value>
    </property>
    <!-- 默认的content type -->
    <property name="defaultContentType" value="text/html" />
  </bean>
</beans>