<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
PUBLIC "-//ibatis.apache.org//DTD Mapper 3.0//EN"
"http://ibatis.apache.org/dtd/ibatis-3-mapper.dtd">

<mapper namespace="com.ly.sys.core.permission.dao.Role2Resource2PermissionDao">
	<resultMap id="role2resource2permissionResult" type="Role2Resource2Permission">
			<id property="id" column="id" javaType="Long"/>
				<result property="roleId"  column="role_id"	javaType="Long"/>
				<result property="resourceId"  column="resource_id"	javaType="Long"/>
				<result property="permissionIds"  column="permission_ids"	javaType="String"/>
			</resultMap>
	
	
	<sql id="queryRole2Resource2PermissionSql">
      	<where>
      	<![CDATA[
			1=1
		 ]]>
						<if test="id!=null">
			<![CDATA[
				and T.id=#{id}
			]]>
		</if>
								<if test="roleId!=null">
			<![CDATA[
				and T.role_id=#{roleId}
			]]>
		</if>
								<if test="resourceId!=null">
			<![CDATA[
				and T.resource_id=#{resourceId}
			]]>
		</if>
								<if test="permissionIds!=null">
			<![CDATA[
				and T.permission_ids=#{permissionIds}
			]]>
		</if>
				    	</where>
   </sql>
   
   
	<select id="findById" resultMap="role2resource2permissionResult" parameterType="long">
		<![CDATA[
		SELECT
		*
		FROM sys_role2resource2permission WHERE id=#{id}
		]]>
	</select>
	
	<select id="findPageList" resultMap="role2resource2permissionResult" parameterType="map">
		<![CDATA[
			SELECT T.* FROM sys_role2resource2permission T 
    	]]>
    	<include refid="queryRole2Resource2PermissionSql"/>
    	<![CDATA[
		   ORDER BY T.id DESC 
		]]>
        
	</select>
  
	<select id="findList" resultMap="role2resource2permissionResult" parameterType="map">
		<![CDATA[
			SELECT T.* FROM sys_role2resource2permission T 
    	]]>
    	<include refid="queryRole2Resource2PermissionSql"/>
    	<![CDATA[
		   ORDER BY T.id DESC 
		]]>
	</select>
  
	<select id="findRole2Resource2Permission" resultMap="role2resource2permissionResult" parameterType="map">
		<![CDATA[
			SELECT T.* FROM sys_role2resource2permission T 
    	]]>
    	<include refid="queryRole2Resource2PermissionSql"/>
    	<![CDATA[
		   ORDER BY T.id DESC 
		]]>
	</select>
	
	<select id="findCount" resultType="Integer" parameterType="map">
		<![CDATA[
        	SELECT COUNT(1) FROM sys_role2resource2permission T
    	]]>
    	<include refid="queryRole2Resource2PermissionSql"/>
	</select>
	
	<insert id="insert" parameterType="Role2Resource2Permission">
		<![CDATA[
			INSERT INTO sys_role2resource2permission(
												id,
												role_id,
												resource_id,
												permission_ids
									)VALUES(
								#{id},
												#{roleId},
												#{resourceId},
												#{permissionIds}
									)
		]]>
		<selectKey resultType="long" keyProperty = "id">
	     	 SELECT LAST_INSERT_ID() AS ID
	    </selectKey>
	</insert>
	
	<update id="update" parameterType="Role2Resource2Permission">
		<![CDATA[
			UPDATE sys_role2resource2permission SET
														role_id=#{roleId},
																resource_id=#{resourceId},
																permission_ids=#{permissionIds}
										WHERE id=#{id}
		]]>
	</update>
	
	<delete id="delete" parameterType="long">
		<![CDATA[
			DELETE FROM sys_role2resource2permission WHERE id=#{id}
		]]> 
	</delete>
  
	<delete id="deleteByRoleResourc">
			DELETE FROM sys_role2resource2permission 
      WHERE 1=1 
      AND role_id=#{roleId}
      <if test="resourceIds!=null">
        <![CDATA[
        AND resource_id not in 
        ]]>
        <foreach item="resourceIds" index="index" collection="resourceIds" open="(" separator="," close=")">  
            #{resourceIds}  
        </foreach>
        
    </if>

	</delete>
  
	<delete id="deleteByRole">
			DELETE FROM sys_role2resource2permission 
      WHERE 1=1 
      AND role_id =#{roleId} 
	</delete>
</mapper>
